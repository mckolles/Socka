{"version":3,"file":"static/js/305.227e032c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Common/Utils/Paginator.module.css?c8e1","components/Common/Utils/Paginator.tsx","webpack://my-app/./src/components/Friends/Friends.module.css?cf9f","components/Friends/FriendsMap.tsx","components/Friends/Friends.tsx","Redux/friendsSelectors.ts","components/Friends/FriendsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__ZuqEm\",\"paginator\":\"Paginator_paginator__4Fy29\"};","import React, { useEffect, useState } from \"react\"\r\nimport s from \"./Paginator.module.css\"\r\n\r\n type PropsType={\r\n  totalItemsCount:number,\r\n  pageSize:number,\r\n  portionSize:number,\r\n  currentPage:number,\r\n  onPageChanged:(pageNumber:number)=>void\r\n}\r\nexport const Paginator:React.FC<PropsType>=(props)=>{\r\n\r\nlet pagesCount=Math.ceil(props.totalItemsCount/props.pageSize)\r\nlet pages=[]\r\nfor (let i=1;i<=pagesCount;i++) {\r\n  pages.push(i)\r\n}\r\nlet portionCount=Math.ceil(pagesCount/props.portionSize)\r\nlet [portionNumber,setPortionNumber]=useState(1)\r\nlet leftPortionPageNumber=(portionNumber-1)*props.portionSize+1\r\nlet rightPortionPageNumber=portionNumber*props.portionSize\r\nlet arrowBack='<'\r\nlet arrowForward='>'\r\nuseEffect(()=>setPortionNumber(Math.ceil(props.currentPage/props.portionSize)),[props.currentPage, props.portionSize] )\r\n\r\nreturn <div className={s.paginator}>\r\n    {portionNumber>1 &&<button onClick={()=>{setPortionNumber(portionNumber-1)}}>{arrowBack}</button> }\r\n    {pages.filter(p=>p>=leftPortionPageNumber&&p<=rightPortionPageNumber).map((p)=>{ \r\n    return <span key={p} className={props.currentPage===p?s.selectedPage:\"\"}\r\n    onClick={(e)=>{props.onPageChanged(p)}}>{p}</span> \r\n    })}\r\n    {portionCount>portionNumber&&<button onClick={()=>{setPortionNumber(portionNumber+1)}}>{arrowForward}</button>}\r\n      </div>\r\n    }","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"Friends_photo__Pm0cv\",\"buttons\":\"Friends_buttons__E+f2Q\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"../Friends/Friends.module.css\";\r\nimport { PropsType } from \"./FriendsContainer\";\r\n\r\nexport const FriendsMap: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <>\r\n      {props.friendsData.map((f) => (\r\n        <div key={f.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/Profile/\" + f.id}>\r\n                <img\r\n                  className={s.photo}\r\n                  src={\r\n                    f.photos.small != null\r\n                      ? f.photos.small\r\n                      : \"https://sun9-49.userapi.com/impg/qSLuFyG2PoXIJWHi5vuUom481lPU_olynB9u8Q/Ta4Q0Yh4-ec.jpg?size=176x215&quality=95&sign=aac022efdebdf0144d3a10e9f5f557c4&type=album\"\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {f.followed ? (\r\n                <button\r\n                  disabled={props.followingInProgres.some((id) => id === f.id)}\r\n                  className={s.buttons}\r\n                  onClick={() => {\r\n                    props.unfollow(f.id);\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  disabled={props.followingInProgres.some((id) => id === f.id)}\r\n                  className={s.buttons}\r\n                  onClick={() => {\r\n                    props.follow(f.id);\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{f.name}</div>\r\n              <div>{f.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"f.country\"} {\"f.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Paginator} from \"../Common/Utils/Paginator\";\r\nimport {FriendsMap} from \"./FriendsMap\";\r\nimport { PropsType } from \"./FriendsContainer\";\r\n\r\n\r\n\r\nlet Friends:React.FC<PropsType> =(props)=>{\r\n    return <div>\r\n            <Paginator \r\n            totalItemsCount={props.totalUsersCount}\r\n            pageSize={props.pageSize} \r\n            currentPage={props.currentPage}\r\n            onPageChanged={props.onPageChanged} \r\n            portionSize={5}\r\n            />\r\n            <FriendsMap {...props}\r\n            />\r\n            </div>\r\n}\r\n\r\n\r\nexport default Friends","import { AppStateType } from \"./reduxStore\"\r\n\r\nexport const getfriends=(state:AppStateType)=>{\r\n    return state.friendsPage.friendsData\r\n}\r\nexport const getPageSize=(state:AppStateType)=>{\r\n    return state.friendsPage.pageSize\r\n}\r\nexport const getTotalFriendsCount=(state:AppStateType)=>{\r\n    return state.friendsPage.totalUsersCount\r\n}\r\nexport const getCurrentPage=(state:AppStateType)=>{\r\n    return state.friendsPage.currentPage\r\n}\r\nexport const getIsFetching=(state:AppStateType)=>{\r\n    return state.friendsPage.isFetching\r\n}\r\nexport const getFollowingInProgres=(state:AppStateType)=>{\r\n    return state.friendsPage.followingInProgres\r\n}","import { connect } from \"react-redux\";\r\nimport React, { ComponentType } from \"react\";\r\nimport Friends from \"./Friends\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { WithAuthNavigate } from \"../../HOC/WithAuthNavigate\";\r\nimport { getCurrentPage, getfriends, getPageSize, getTotalFriendsCount, getFollowingInProgres, getIsFetching } from \"../../Redux/friendsSelectors\";\r\nimport { FriendsDataType } from \"../../Types/types\";\r\nimport { AppStateType } from \"../../Redux/reduxStore\";\r\nimport { follow, unfollow, getFriendsThunkCreator } from \"../../Redux/friendsReducer\";\r\n\r\n\r\ntype MapStateProps = {\r\n  currentPage: number;\r\n  pageSize: number;\r\n  isFetching: boolean;\r\n  totalUsersCount: number;\r\n  friendsData: Array<FriendsDataType>;\r\n  followingInProgres: Array<number>;\r\n  \r\n};\r\n\r\ntype MapDispatchProps = {\r\n  follow: (friendId: number) => void;\r\n  unfollow: (friendId: number) => void;\r\n  getFriendsThunkCreator: (currentPage: number, pageSize: number) => void;\r\n \r\n};\r\n\r\ntype OwnPropsType = {\r\n  onPageChanged:(pageNumber:number)=>void\r\n};\r\n\r\nexport type PropsType = MapStateProps & MapDispatchProps & OwnPropsType;\r\n\r\nexport class FriendsContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.getFriendsThunkCreator(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.getFriendsThunkCreator(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        {!this.props.isFetching ? (\r\n          <Friends {...this.props} onPageChanged={this.onPageChanged}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProps => {\r\n  return {\r\n    friendsData: getfriends(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalFriendsCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgres: getFollowingInProgres(state)\r\n  };\r\n};\r\n\r\nexport default compose<ComponentType>(\r\n  connect<MapStateProps, MapDispatchProps, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    unfollow,\r\n    follow,\r\n    getFriendsThunkCreator\r\n  }),\r\n  WithAuthNavigate\r\n)(FriendsContainer);\r\n"],"names":["Paginator","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","currentPage","_jsxs","className","s","children","_jsx","onClick","filter","p","map","e","onPageChanged","FriendsMap","_Fragment","friendsData","f","NavLink","to","id","src","photos","small","alt","followed","disabled","followingInProgres","some","unfollow","follow","name","status","totalUsersCount","_objectSpread","getfriends","state","friendsPage","getPageSize","getTotalFriendsCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgres","FriendsContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","pageNumber","getFriendsThunkCreator","_createClass","key","value","this","Preloader","Friends","React","compose","connect","WithAuthNavigate"],"sourceRoot":""}