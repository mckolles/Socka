{"version":3,"file":"static/js/287.0a660293.chunk.js","mappings":"6LACA,G,QAAA,CAAgB,QAAU,yBAAyB,QAAU,yBAAyB,YAAc,6BAA6B,QAAU,yBAAyB,IAAM,qBAAqB,cAAgB,iC,6ECSzMA,GAAcC,EAAAA,EAAAA,GAAiB,IAQ/BC,EAA4C,SAACC,GACjD,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,YAAcH,EAAMI,GAAGC,UAClCC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAUH,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,IAAMH,UACpBJ,EAAAA,EAAAA,KAAA,OAAKQ,IAdiK,mKAcvJC,IAAI,QAErBT,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,YAAcH,UAC5BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,IAAEL,EAAMW,WAEbV,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,QAAUH,SAAEL,EAAMY,cAI1C,EAuBMC,GAAsBC,EAAAA,EAAAA,GAAgC,CAC1DC,KAAM,wBADoBD,EAf0B,SAACd,GACrD,OACEM,EAAAA,EAAAA,MAAA,QAAMU,SAAUhB,EAAMiB,aAAaZ,SAAA,EACjCJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACJC,UAAWC,EAAAA,EACXT,KAAK,iBACLU,SAAU,CAACC,EAAAA,EAAezB,GAC1BU,UAAWC,EAAAA,gBACXe,YAAY,kBAEdtB,EAAAA,EAAAA,KAAA,UAAQM,UAAWC,EAAAA,cAAgBH,SAAC,6DAG1C,IA4CA,EAjCwC,SAACL,GACvC,IAAIwB,EAASxB,EAAMyB,YAAYC,YAAYC,KAAI,SAACC,GAAC,OAC/C3B,EAAAA,EAAAA,KAACF,EAAY,CAACY,KAAMiB,EAAEjB,KAAMP,GAAIwB,EAAExB,GAAIQ,QAASgB,EAAEhB,SAAcgB,EAAExB,GAAM,IAKnEyB,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOjB,MANQ,kHAEHL,EAAO,CACXM,OAAQ,GACRC,YAAa,eACb9B,QAAS,eACV0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGuCG,IAAAA,KAT/B,kHAS+CR,GAAM,KAAD,EAArDC,EAAuBE,EAAAM,KAC7BC,QAAQC,IAAIV,EAASD,MAAOG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAE5BO,QAAQG,MAAKV,EAAAS,IAAS,yBAAAT,EAAAW,OAAA,GAAAf,EAAA,kBAEzB,kBAfgB,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KAkBjB,OACE7C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAUH,SAAA,EACxBJ,EAAAA,EAAAA,KAACY,EAAmB,CAACG,SAAUa,IAC9BL,IAGP,E,SCjFA,GACA4B,E,QAAAA,KACEC,EAAAA,EAAAA,KAToB,SAACC,GACvB,MAAO,CACL7B,YAAY6B,EAAM7B,YAEpB,GAK0B,CAAE8B,QAAQC,EAAAA,EAAAA,eAClCC,EAAAA,EAHF,CAIEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.tsx","components/Dialogs/DiologsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"diologs\":\"Dialogs_diologs__4KMvm\",\"wrapper\":\"Dialogs_wrapper__riIFm\",\"dialogsItem\":\"Dialogs_dialogsItem__xUjG8\",\"message\":\"Dialogs_message__99KSZ\",\"img\":\"Dialogs_img__akWMI\",\"DiologsButton\":\"Dialogs_DiologsButton__QYJqi\"};","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm, InjectedFormProps } from \"redux-form\";\r\nimport { Textarea } from \"../Common/Utils/FormControls\";\r\nimport { maxLengthCreator, requiredField } from \"../Common/Utils/Validators/Validator\";\r\nimport { initialStateType } from \"../../Redux/diologsReducer\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\n\r\nconst ava: \"https://sun9-69.userapi.com/impg/oBT2IlqS59892ar9zWMRqvlYBTyxj_Ke-FqHYQ/GSx7MixfTCY.jpg?size=750x750&quality=96&sign=4cd064a9bb5033aadc23ec0f9a0cbb5d&type=album\" = \"https://sun9-69.userapi.com/impg/oBT2IlqS59892ar9zWMRqvlYBTyxj_Ke-FqHYQ/GSx7MixfTCY.jpg?size=750x750&quality=96&sign=4cd064a9bb5033aadc23ec0f9a0cbb5d&type=album\";\r\nconst maxLength10 = maxLengthCreator(50);\r\n\r\ninterface DialogsItemsProps {\r\n  name: string;\r\n  id: number;\r\n  message: string;\r\n}\r\n\r\nconst DialogsItems: React.FC<DialogsItemsProps> = (props) => {\r\n  return (\r\n    <NavLink to={\"/Dialogs/\" + props.id}>\r\n      <div className={s.diologs}>\r\n        <div className={s.img}>\r\n          <img src={ava} alt=\"\" />\r\n        </div>\r\n        <div className={s.dialogsItem}>\r\n          <p> {props.name}</p>\r\n        </div>\r\n        <div className={s.message}>{props.message}</div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\ninterface AddMessageFormValues {\r\n  newMessageBody: string;\r\n}\r\n\r\ninterface AddMessageFormProps extends InjectedFormProps<AddMessageFormValues> {}\r\n\r\nconst AddMessageForm: React.FC<AddMessageFormProps> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        validate={[requiredField, maxLength10]}\r\n        className={s.textAreaDiologs}\r\n        placeholder=\"Send message\"\r\n      />\r\n      <button className={s.DiologsButton}>Отправить</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm<AddMessageFormValues>({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\ninterface DialogsProps {\r\n  dialogsPage: initialStateType;\r\n  sendSms: (smsText: string) => void;\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsProps> = (props) => {\r\n  let dialog = props.dialogsPage.diologsData.map((d) => (\r\n    <DialogsItems name={d.name} id={d.id} message={d.message} key={d.id} />\r\n  ));\r\n  let addNewMessage = (values: AddMessageFormValues) => {\r\n    props.sendSms(values.newMessageBody);\r\n  };\r\n  const sendMessage = async (): Promise<void> => {\r\n    const url = `https://api.green-api.com/waInstance/1101824662/sendMessage/5950d0ef9d704fbb9cbd67ffe5d1a171fa9218f6a7b5435b87}`;\r\n  \r\n    const data = {\r\n      chatId: '',\r\n      phoneNumber: '+79019018316',\r\n      message: 'loh i pidor',\r\n    };\r\n  \r\n    try {\r\n      const response: AxiosResponse = await axios.post(url, data);\r\n      console.log(response.data); // Обработка успешного ответа\r\n    } catch (error) {\r\n      console.error(error); // Обработка ошибки\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <AddMessageFormRedux onSubmit={sendMessage} />\r\n      {dialog}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../Redux/diologsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { WithAuthNavigate } from \"../../HOC/WithAuthNavigate\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../Redux/reduxStore\";\r\n\r\nlet mapStatetoProps = (state:AppStateType) => {\r\nreturn {\r\n  dialogsPage:state.dialogsPage\r\n}\r\n}\r\n\r\n\r\nexport default \r\ncompose(\r\n  connect(mapStatetoProps,{ sendSms:actions.addDiaolgsAC}),\r\n  WithAuthNavigate\r\n)(Dialogs)\r\n\r\n"],"names":["maxLength10","maxLengthCreator","DialogsItems","props","_jsx","NavLink","to","id","children","_jsxs","className","s","src","alt","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","dialog","dialogsPage","diologsData","map","d","sendMessage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","response","wrap","_context","prev","next","chatId","phoneNumber","axios","sent","console","log","t0","error","stop","apply","arguments","compose","connect","state","sendSms","actions","WithAuthNavigate","Dialogs"],"sourceRoot":""}